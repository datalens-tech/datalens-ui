name: E2E Tests

on:
  workflow_dispatch:
  pull_request:
    branches-ignore:
      - 'weblate-**'

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  pull-requests: write

jobs:
  run:
    name: e2e-tests
    runs-on:
      - self-hosted
      - linux
      - cloud
      - datalens-opensource
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: 22
      - name: check docker compose config
        run: npm run test:e2e:docker:check &>dev/null
      - name: up docker compose
        run: |
          npm run test:e2e:docker:up-no-ui
          npm run test:e2e:docker:up-nginx
        env:
          US_PORT: '3033'
      - run: npm run deps
        env:
          # folder in docker container
          NPM_CACHE_ROOT: /home/github/actions-runner/_work/.cache/npm-cache
      - name: run build
        run: npm run build
      - name: run tests local from repo
        run: |
          mkdir -p ./tests/logs
          node dist/server 1>./tests/logs/ui.stdout.log 2>./tests/logs/ui.stderr.log &
          echo $! > ./tests/logs/ui.pid
          npm run test:e2e:opensource
        env:
          E2E_NO_AUTH: 'false'
          E2E_RETRY_TIMES: '2'
          E2E_TEST_TIMEOUT: '90000'
          E2E_ACTION_TIMEOUT: '10000'
          E2E_EXPECT_TIMEOUT: '10000'
          E2E_MAX_FAILURES: '30'
          E2E_MAX_WORKERS: '12'
          E2E_TRACE_SCREENSHOTS: 'true'
          E2E_DOMAIN: http://localhost:8080
          E2E_USER_LOGIN: admin
          E2E_USER_PASSWORD: admin

          NODE_ENV: production
          APP_BUILDER_CDN: 'false'
          UI_CORE_CDN: 'false'
          APP_MODE: full
          APP_ENV: production
          APP_INSTALLATION: opensource
          APP_PORT: '3030'

          US_ENDPOINT: http://localhost:3033
          BI_API_ENDPOINT: http://localhost:8010
          BI_DATA_ENDPOINT: http://localhost:8020
          AUTH_ENDPOINT: http://localhost:8088

          US_MASTER_TOKEN: us-master-token
          AUTH_POLICY: disabled
          HC: '0'
          AUTH_ENABLED: 'true'
          AUTH_MASTER_TOKEN: auth-master-token
          AUTH_TOKEN_PUBLIC_KEY: '-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA+HICDZMfimMIiGdd0dPr\n2N3zxHOJqiVXuvUj/aBBS7c8760rJUh4344sP/0Gid558yH/v1MtzZ0R9w09v6gb\nSNrSiNwIUNGPhbnm9Jf+kMezsI/rkcIdoVm3KJ8CFUYy6MRPzW7iJmIVRHBb82v1\nmAYCCQFU6IRtFIa9hQ8wedWwxqXZekSNS+6NB37dmmQB9kz2E3MY+KRLigOh4i3p\nCZ1ti3HVvMa9Rlgk9FmoWExzub5ECChqwm+vn8yFXjYW7kUSClcV2xx4nbQWqjrR\nyyLk6W2BNOuCFVvz0j+5XkpLAt7tljtVZc+572HBEKpF2mAdmAip5NzeDhKqucJ+\nZQIDAQAB\n-----END PUBLIC KEY-----'
          AUTH_SIGNUP_DISABLED: 'false'
      - name: kill ui service
        if: always()
        run: |
          kill -9 $(cat ./tests/logs/ui.pid) || true
          rm -rf ./tests/logs/ui.pid
      - name: get docker compose logs
        if: always()
        run: |
          mkdir -p ./tests/logs
          npm run test:e2e:docker:logs > ./tests/logs/docker-compose.log
          npm run test:e2e:docker:logs-nginx > ./tests/logs/docker-compose.nginx.log
      - name: run docker compose down
        if: always()
        run: |
          npm run test:e2e:docker:down
          npm run test:e2e:docker:down-nginx
      - name: save report link and pr number
        if: always()
        run: |
          mkdir -p ./tests/artifacts
          echo "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}" > ./tests/artifacts/report-link
          echo "${{ github.event.pull_request.number }}" > ./tests/artifacts/report-pr
      - uses: actions/upload-artifact@v4
        if: always()
        id: upload-artifact-report
        with:
          name: playwright-report
          path: ./tests/artifacts/
          retention-days: 7
      - uses: actions/upload-artifact@v4
        if: always()
        id: upload-artifact-docker-compose-logs
        with:
          name: docker-compose-logs
          path: ./tests/logs/
          retention-days: 7
      - name: extract e2e links from workflow
        if: always()
        id: e2e_links
        run: |
          echo "e2e_report_link=${{ steps.upload-artifact-report.outputs.artifact-url }}" >> "$GITHUB_OUTPUT"
          echo "e2e_docker_compose_logs_link=${{ steps.upload-artifact-docker-compose-logs.outputs.artifact-url }}" >> "$GITHUB_OUTPUT"
    outputs:
      e2e_report_link: ${{ steps.e2e_links.outputs.e2e_report_link }}
      e2e_docker_compose_logs_link: ${{ steps.e2e_links.outputs.e2e_docker_compose_logs_link }}

  report:
    name: e2e-tests-report
    needs: run
    if: always()
    runs-on:
      - self-hosted
      - linux
      - cloud
      - datalens-opensource
    steps:
      - uses: actions/checkout@v5
      - uses: actions/download-artifact@v4
        with:
          name: playwright-report
          path: ./tests/artifacts/
      - name: pack to single archive
        run: |
          cd ./tests/artifacts && tar --no-xattrs -cvf "./../report.tmp" * &>/dev/null && mv "./../report.tmp" "./report.tar.gz"
        env:
          COPYFILE_DISABLE: 1
      - name: upload report to s3
        run: |
          E2E_REPORT_PATH="reports/${{ github.head_ref || github.ref_name }}/${{ github.run_id }}/${{ github.run_attempt }}"
          aws --region "${STORAGE_REGION}" --endpoint-url "${STORAGE_ENDPOINT}" s3 cp ./tests/artifacts "s3://${STORAGE_BUCKET}/${STORAGE_PREFIX}/${E2E_REPORT_PATH}/" --recursive
          LINK_S3="${STORAGE_ENDPOINT}/${STORAGE_BUCKET}/${STORAGE_PREFIX}/${E2E_REPORT_PATH}/report.tar.gz"
          LINK_S3_WEBSITE="https://${STORAGE_BUCKET}.${HTML_ENDPOINT}/${STORAGE_PREFIX}/${E2E_REPORT_PATH}/report"
          echo "üîó link to s3: ${LINK_S3_WEBSITE}"
          echo -n "" >./tests/artifacts/trace-links
          for TRACE_FILE in $(ls -1 tests/artifacts/report/data/*.zip 2>/dev/null || true); do
            TRACE_NAME=$({ unzip -p "${TRACE_FILE}" 0-trace.trace || true; } | head -n1 | jq -r '.title | split(" ‚Ä∫ ")[1:] | join(" ‚Ä∫ ")')
            if [ -z "${TRACE_NAME}" ]; then
              TRACE_NAME="trace"
            fi
            TRACE_ZIP=$(echo "${TRACE_FILE}" | sed 's|tests/artifacts/||')
            LINK_TRACE="${STORAGE_ENDPOINT}/${STORAGE_BUCKET}/${STORAGE_PREFIX}/${E2E_REPORT_PATH}/${TRACE_ZIP}"
            LINK_TRACE_ENCODED=$(jq -rn --arg X "${LINK_TRACE}" '$X|@uri')
            LINK_TRACE_VIEWER="https://playwright-trace-viewer.website.yandexcloud.net/?trace=${LINK_TRACE_ENCODED}"
            echo -n "[${TRACE_NAME}](${LINK_TRACE_VIEWER})---" >>./tests/artifacts/trace-links
          done
          TRACE_LINKS=$(cat ./tests/artifacts/trace-links)
          echo "${TRACE_LINKS}" | sed 's|---$||' >./tests/artifacts/trace-links
          echo "E2E_REPORT_LINK_S3=${LINK_S3_WEBSITE}" >> "$GITHUB_ENV"
          echo "E2E_TRACE_LINKS_S3=$(cat ./tests/artifacts/trace-links)" >> "$GITHUB_ENV"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.E2E_REPORT_S3_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.E2E_REPORT_S3_SECRET_KEY }}
          STORAGE_ENDPOINT: ${{ vars.E2E_REPORT_S3_ENDPOINT }}
          STORAGE_REGION: ${{ vars.E2E_REPORT_S3_REGION }}
          STORAGE_BUCKET: ${{ vars.E2E_REPORT_S3_BUCKET }}
          STORAGE_PREFIX: ${{ vars.E2E_REPORT_S3_PREFIX }}
          HTML_ENDPOINT: ${{ vars.E2E_REPORT_HTML_ENDPOINT }}
      - uses: daun/playwright-report-summary@v3
        if: always()
        id: report-md
        with:
          report-file: ./tests/artifacts/results.json
          create-comment: false
      - name: create or update pr comment
        uses: actions/github-script@v7
        if: always()
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const issueNumber = context.issue.number;
            const repo = context.repo;

            const commentIdentifier = "<!-- e2e-tests-report -->";
            const { data: comments } = await github.rest.issues.listComments({
              ...repo,
              issue_number: issueNumber,
            });

            const botComment = comments.find(comment => 
              comment.body.includes(commentIdentifier) && 
              comment.user.login === 'github-actions[bot]'
            );

            const traceLinks = process.env.E2E_TRACE_LINKS ? `<details>\n<summary>üßê Links with traces:</summary>\n\n${process.env.E2E_TRACE_LINKS.split('---').map((url)=>'- ' + url).join('\n')}\n</details>` : '';
            const dockerComposeLogsLink = process.env.E2E_DOCKER_COMPOSE_LINKS ? `üê≥ Link with docker compose logs: [logs](${process.env.E2E_DOCKER_COMPOSE_LINKS})` : '';

            const timestamp = new Date(Date.now() + 3 * 60 * 60 * 1000).toISOString().replace('T', ' ').slice(0, 19) + ' MSK';

            let commentBody = `
            ## ![](https://storage.yandexcloud.net/e2e-report/icons/os-small.svg) E2E Tests

            ${{ steps.report-md.outputs.summary }}

            ---

            ${traceLinks}

            üëâ Link with detailed report: [report](${process.env.E2E_REPORT_LINK})

            ${dockerComposeLogsLink}

            Last updated: ${timestamp}

            ${commentIdentifier}
            `;

            commentBody = commentBody.replace(/@screenshot/g, '`@screenshot`');

            if (botComment) {
              await github.rest.issues.updateComment({
                ...repo,
                comment_id: botComment.id,
                body: commentBody
              });
              
              console.log('updated existing comment on PR #' + issueNumber);
            } else {
              await github.rest.issues.createComment({
                ...repo,
                issue_number: issueNumber,
                body: commentBody
              });
              
              console.log('added new comment to PR #' + issueNumber);
            }
        env:
          E2E_REPORT_LINK: ${{ env.E2E_REPORT_LINK_S3 }}
          E2E_DOCKER_COMPOSE_LINKS: ${{ needs.run.outputs.e2e_docker_compose_logs_link }}
          E2E_TRACE_LINKS: ${{ env.E2E_TRACE_LINKS_S3 }}
