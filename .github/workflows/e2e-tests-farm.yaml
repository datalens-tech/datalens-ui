name: E2E Tests Farm

on:
  pull_request:
    branches-ignore:
      - 'weblate-**'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  FARM_POLL_SLEEP_SEC: 10
  FARM_POLL_TIMEOUT_MIN: 15

jobs:
  run:
    name: e2e-tests-farm
    runs-on:
      - self-hosted
      - linux
      - qyp
    container:
      image: ghcr.io/datalens-tech/datalens-playwright:1.48.2-24.04
      options: --user 1092:1092
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: 22
          cache: 'npm'
          cache-dependency-path: ./package-lock.json
      - name: check closed branch exists
        run: |
          if gh api "repos/${GH_REPO_OWNER}/${GH_REPO_CLOSED}/branches/${GH_BRANCH_NAME}" >/dev/null 2>&1; then
            echo "GH_BRANCH_NAME_CLOSED=${BRANCH_NAME}" >> "$GITHUB_ENV"
            echo "  branch closed: ${BRANCH_NAME}"
          else
            echo "GH_BRANCH_NAME_CLOSED=main" >> "$GITHUB_ENV"
            echo "  branch closed: main"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          GH_REPO_OWNER: ${{ github.repository_owner }}
          GH_REPO_CLOSED: ${{ vars.GH_REPO_CLOSED }}
          GH_BRANCH_NAME: ${{ github.head_ref }}
      - name: create farm and wait for it to be ready
        timeout-minutes: ${{ fromJSON(env.FARM_POLL_TIMEOUT_MIN) }}
        run: |
          FARM_NAME=$(echo "${GH_BRANCH_NAME}" | tr '[:upper:]' '[:lower:]')

          # curl -k -q -s -X POST -H "content-type: application/json" \
          # --data "{\"project\":\"${GH_REPO_CLOSED}\", \"organization\":\"${GH_REPO_OWNER}\", \"name\":\"${FARM_NAME}\",\"vcs\":\"git\",\"branch\":\"${GH_BRANCH_NAME_CLOSED}\",\"instanceConfigName\":\"${FARM_INSTANCE_CONFIG_NAME}\",\"env.GITHUB_BRANCH_NAME\":\"${GH_BRANCH_NAME}\"}" \
          # "${FARM_ENDPOINT}/api/generate"

          FARM_STATUS="queued"
          FARM_URL=""

          echo "⏳ wait for farm to be ready..."

          while true; do
            FARM_DATA=$(
              curl -k -q -s -X POST -H "content-type: application/json" \
              --data "{\"project\":\"${GH_REPO_CLOSED}\", \"name\":\"${FARM_NAME}\",\"vcs\":\"git\",\"branch\":\"${GH_BRANCH_NAME_CLOSED}\",\"instanceConfigName\":\"${FARM_INSTANCE_CONFIG_NAME}\"}" \
              "${FARM_ENDPOINT}/api/getInstance"
            )
            FARM_STATUS=$(echo "${FARM_DATA}" | jq -r '.instance.status')
            FARM_URL=$(echo "${FARM_DATA}" | jq -r '.url')
            if [ "${FARM_STATUS}" = "running" ]; then
              break
            fi
            echo "  retry, status [${FARM_STATUS}]..."
            sleep "${FARM_POLL_SLEEP_SEC}"
          done

          echo "  farm status: ${FARM_STATUS}"
          echo "  farm url: ${FARM_URL}"
          echo "E2E_DOMAIN=${FARM_URL}" >> "$GITHUB_ENV"

          echo "✅ farm success ready"
        env:
          GH_REPO_OWNER: ${{ github.repository_owner }}
          GH_REPO_CLOSED: ${{ vars.GH_REPO_CLOSED }}
          GH_BRANCH_NAME: ${{ github.head_ref }}
          GH_BRANCH_NAME_CLOSED: ${{ env.GH_BRANCH_NAME_CLOSED }}
          FARM_INSTANCE_CONFIG_NAME: ${{ vars.FARM_INSTANCE_CONFIG_NAME }}
          FARM_ENDPOINT: ${{ vars.FARM_ENDPOINT }}
          FARM_POLL_TIMEOUT_SEC: ${{ env.FARM_POLL_SLEEP_SEC }}
      - run: npm ci
      - name: run e2e tests
        run: npm run test:e2e
        env:
          GH_BRANCH_NAME: ${{ github.head_ref }}
          GH_BRANCH_NAME_CLOSED: ${{ env.GH_BRANCH_NAME_CLOSED }}
          E2E_DOMAIN: ${{ env.E2E_DOMAIN }}
          E2E_AUTH_TYPE: ${{ env.E2E_AUTH_TYPE }}
          E2E_PASSPORT_URL: ${{ env.E2E_PASSPORT_URL }}
          E2E_USER_LOGIN: ${{ secrets.E2E_USER_LOGIN }}
          E2E_USER_PASSWORD: ${{ secrets.E2E_USER_PASSWORD }}
          E2E_MAX_WORKERS: 6
          E2E_RETRY_TIMES: 1
          NODE_TLS_REJECT_UNAUTHORIZED: 0
