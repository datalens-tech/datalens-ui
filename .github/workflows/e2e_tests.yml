name: E2E Tests

on:
  pull_request:
    branches-ignore:
      - 'weblate-**'
  workflow_dispatch:
    inputs:
      distinct_id:
        description: 'for the return-dispatch action'
        required: false
      control-api:
        description: 'custom control-api version'
      data-api:
        description: 'custom data-api version'
      us:
        description: 'custom us version'
      auth:
        description: 'custom auth version'
      ui:
        description: 'custom ui version'
        default: 'release'

env:
  CONTROL_API_VERSION: ${{github.event.inputs.control-api}}
  DATA_API_VERSION: ${{github.event.inputs.data-api}}
  US_VERSION: ${{github.event.inputs.us}}
  AUTH_VERSION: ${{github.event.inputs.auth}}
  UI_VERSION: ${{github.event.inputs.ui}}

concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  run-e2e:
    name: Install Datalens and Run E2E Tests
    runs-on:
      - self-hosted
      - linux
      - cloud
      - datalens-opensource
    steps:
      - name: echo distinct ID ${{ github.event.inputs.distinct_id }}
        run: echo ${{ github.event.inputs.distinct_id }}

      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 22
          cache: 'npm'
          cache-dependency-path: ./package-lock.json

      - name: Get ui ref version
        run: |
          UI_REF="${{ github.head_ref }}"
          if [ -z "${UI_REF}" ]; then
            if [ "${UI_VERSION}" == "release" ]; then
              UI_REF="release"
            else
              UI_REF="release-${UI_VERSION}"
            fi
          fi
          echo "UI_REF=${UI_REF}" >> "$GITHUB_ENV"
        env:
          UI_VERSION: ${{ env.UI_VERSION }}

      - uses: actions/checkout@v4
        with:
          ref: ${{ env.UI_REF }}

      - name: Check docker compose Config
        run: npm run test:e2e:docker:check
        env:
          US_VERSION: ${{ env.US_VERSION }}
          AUTH_VERSION: ${{ env.AUTH_VERSION }}
          CONTROL_API_VERSION: ${{ env.CONTROL_API_VERSION }}
          DATA_API_VERSION: ${{ env.DATA_API_VERSION }}
          UI_VERSION: ${{ env.UI_VERSION }}

      - name: Build docker ui image with cache
        if: ${{ env.UI_VERSION == '' }}
        uses: docker/build-push-action@v5.0.0
        with:
          network: host
          context: .
          push: false
          load: true
          tags: e2e-datalens-ui:pr
          platforms: linux/amd64
          cache-from: |
            type=s3,endpoint_url=${{ vars.DOCKER_CACHE_S3_ENDPOINT }},region=${{ vars.DOCKER_CACHE_S3_REGION }},bucket=${{ vars.DOCKER_CACHE_S3_BUCKET }},access_key_id=${{ secrets.DOCKER_CACHE_S3_ACCESS_KEY }},secret_access_key=${{ secrets.DOCKER_CACHE_S3_SECRET_KEY }},blobs_prefix=${{ github.repository }}/,manifests_prefix=${{ github.repository }}/manifests/e2e-tests/pr-${{ github.event.pull_request.number }}/
            type=s3,endpoint_url=${{ vars.DOCKER_CACHE_S3_ENDPOINT }},region=${{ vars.DOCKER_CACHE_S3_REGION }},bucket=${{ vars.DOCKER_CACHE_S3_BUCKET }},access_key_id=${{ secrets.DOCKER_CACHE_S3_ACCESS_KEY }},secret_access_key=${{ secrets.DOCKER_CACHE_S3_SECRET_KEY }},blobs_prefix=${{ github.repository }}/,manifests_prefix=${{ github.repository }}/manifests/build-application-docker/
          cache-to: type=s3,upload_parallelism=8,mode=max,endpoint_url=${{ vars.DOCKER_CACHE_S3_ENDPOINT }},region=${{ vars.DOCKER_CACHE_S3_REGION }},bucket=${{ vars.DOCKER_CACHE_S3_BUCKET }},access_key_id=${{ secrets.DOCKER_CACHE_S3_ACCESS_KEY }},secret_access_key=${{ secrets.DOCKER_CACHE_S3_SECRET_KEY }},blobs_prefix=${{ github.repository }}/,manifests_prefix=${{ github.repository }}/manifests/e2e-tests/pr-${{ github.event.pull_request.number }}/

      - name: Up docker compose and install local deps for test
        if: ${{ env.UI_VERSION == '' }}
        run: |
          npm run test:e2e:docker:up-no-build && npm ci
        env:
          US_VERSION: ${{ env.US_VERSION }}
          AUTH_VERSION: ${{ env.AUTH_VERSION }}
          CONTROL_API_VERSION: ${{ env.CONTROL_API_VERSION }}
          DATA_API_VERSION: ${{ env.DATA_API_VERSION }}

      - name: Run tests local from repo
        if: ${{ env.UI_VERSION == '' }}
        run: npm run test:e2e:opensource
        env:
          E2E_NO_AUTH: 'false'
          E2E_RETRY_TIMES: '2'
          E2E_TEST_TIMEOUT: '90000'
          E2E_ACTION_TIMEOUT: '10000'
          E2E_EXPECT_TIMEOUT: '10000'
          E2E_MAX_FAILURES: '30'
          E2E_MAX_WORKERS: '6'
          E2E_DOMAIN: http://localhost:8080
          E2E_USER_LOGIN: admin
          E2E_USER_PASSWORD: admin

      - name: Run tests from builded docker image
        if: ${{ env.UI_VERSION != '' }}
        run: |
          npm run test:e2e:docker
        env:
          US_VERSION: ${{ env.US_VERSION }}
          AUTH_VERSION: ${{ env.AUTH_VERSION }}
          CONTROL_API_VERSION: ${{ env.CONTROL_API_VERSION }}
          DATA_API_VERSION: ${{ env.DATA_API_VERSION }}
          UI_VERSION: ${{ env.UI_VERSION }}
          E2E_NO_AUTH: 'false'
          E2E_RETRY_TIMES: '2'
          E2E_TEST_TIMEOUT: '90000'
          E2E_ACTION_TIMEOUT: '10000'
          E2E_EXPECT_TIMEOUT: '10000'
          E2E_MAX_FAILURES: '30'
          E2E_MAX_WORKERS: '6'

      - name: Copy tests report from docker run
        if: always()
        run: |
          if [ -z "${{ env.UI_VERSION }}" ]; then
            echo "skip export report from docker run..."
          else
            echo "export report from docker run"
            rm -rf ./tests/artifacts
            npm run test:e2e:docker:report
          fi
        env:
          US_VERSION: ${{ env.US_VERSION }}
          AUTH_VERSION: ${{ env.AUTH_VERSION }}
          CONTROL_API_VERSION: ${{ env.CONTROL_API_VERSION }}
          DATA_API_VERSION: ${{ env.DATA_API_VERSION }}
          UI_VERSION: ${{ env.UI_VERSION }}

      - name: Get docker compose logs
        if: always()
        run: |
          mkdir -p ./tests/logs
          npm run test:e2e:docker:logs > ./tests/logs/docker-compose.log

      - name: Run docker compose down
        if: always()
        run: |
          npm run test:e2e:docker:down
        env:
          US_VERSION: ${{ env.US_VERSION }}
          AUTH_VERSION: ${{ env.AUTH_VERSION }}
          CONTROL_API_VERSION: ${{ env.CONTROL_API_VERSION }}
          DATA_API_VERSION: ${{ env.DATA_API_VERSION }}
          UI_VERSION: ${{ env.UI_VERSION }}

      - name: Save report link and pr number
        if: always()
        run: |
          mkdir -p ./tests/artifacts
          echo "reports/${{ github.head_ref || github.ref_name }}/${{ github.run_id }}/${{ github.run_attempt }}" > ./tests/artifacts/report-link
          echo "${{ github.event.pull_request.number }}" > ./tests/artifacts/report-pr

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: ./tests/artifacts/
          retention-days: 30

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: docker-compose-logs
          path: ./tests/logs/
          retention-days: 30
