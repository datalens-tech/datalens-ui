@import '../styles/mixins';

$baseClass: '.dl-simple-datepicker';
$widthInputDate: 95px;
$widthInputTime: 68px;
$widthActions: 38px;

@mixin block_style($size: s, $type: control) {
    @if $size == 's' {
        @include text-body-short;
    }
    @if $size == 'm' {
        @include text-body-short;
    }
    @if $size == 'l' {
        @include text-body-short;
    }
    @if $size == 'xl' {
        @include text-body-2;
    }
    @if $type == 'label' {
        @include text-accent;
    }
}

#{$baseClass} {
    $input: '.g-text-input__control';
    $control: '#{&}__control';

    display: inline-flex;
    max-width: 100%;

    &__control {
        position: relative;
        display: inline-flex;
        padding-right: 2px;
        min-width: 143px;

        &::before {
            box-sizing: border-box;
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            border: 1px solid var(--g-color-line-generic);
            border-radius: 3px;
            pointer-events: none;
        }

        &:focus {
            outline: none;
        }

        &:hover:not(#{&}_active):not(#{&}_invalid):not(#{&}_mobile)::before {
            border-color: var(--g-color-line-generic-hover);
        }

        &_active::before {
            border-color: var(--g-color-line-generic-active);
        }

        &_invalid::before {
            border-color: var(--g-color-line-danger);
        }

        &_with-label {
            padding-left: 8px;
        }

        &_with-time {
            min-width: 220px;
        }

        &_disabled {
            color: var(--g-color-text-hint);
            background-color: var(--g-color-base-generic-accent-disabled);
            border-color: transparent;
            pointer-events: none;

            // otherwise, the background color of the input overlays the background color of the datepicker control
            & #{$input} {
                background-color: transparent;
            }
        }

        &_size {
            &_s {
                #{$baseClass}__control-label {
                    @include block_style(s, label);
                }
            }

            &_m {
                #{$baseClass}__control-label {
                    @include block_style(m, label);
                }
            }

            &_l {
                #{$baseClass}__control-label {
                    @include block_style(l, label);
                }
            }

            &_xl {
                #{$baseClass}__control-label {
                    @include block_style(xl, label);
                }
            }
        }
    }

    &__control-label {
        @include text-accent;
        @include overflow-ellipsis;
        position: relative;
        display: inline-block;
        margin-top: auto;
        margin-bottom: auto;
        padding-right: 4px;
    }

    &__control-input {
        display: inline-block;
        position: relative;
        padding-left: 8px;
        flex: 0;

        &_date {
            width: $widthInputDate;
            min-width: $widthInputDate;
        }

        &_time {
            width: $widthInputTime;
            min-width: $widthInputTime;
            border-left: 1px solid transparent;

            &::before {
                content: '';
                position: absolute;
                top: 1px;
                left: -1px;
                width: 1px;
                height: calc(100% - 2px);
                background-color: var(--g-color-line-generic);
            }
        }

        &_relative {
            & #{$input} {
                color: var(--g-color-text-misc);
            }

            #{$control}_with-time & {
                width: 172px;
            }
        }

        &_invalid #{$input} {
            color: var(--g-color-line-danger);
        }
    }

    &__control-input-native {
        position: absolute;
        left: 0;
        top: 0;
        // width: 100% does not work for inputs in mobile browsers
        min-width: 100%;
        height: 100%;
        opacity: 0;
        border: none;

        &_disabled {
            pointer-events: none;
        }
    }

    &__control-label + &__control-input {
        padding-left: 3px;
    }

    &__control-actions {
        display: inline-flex;
        justify-content: flex-end;
        min-width: $widthActions;
        margin-left: auto;

        #{$control}_size_l &,
        #{$control}_size_xl & {
            width: 44px;
        }
    }

    &__control-action {
        display: flex;
        align-items: center;
        justify-content: center;
        width: 19px;
        height: 100%;
        cursor: pointer;

        #{$control}_size_l &,
        #{$control}_size_xl & {
            width: 22px;
        }

        &_clear {
            color: var(--g-color-text-hint);

            #{$control}:not(#{$control}_mobile) &:hover {
                color: var(--g-color-text-primary);
            }
        }

        &_hidden {
            visibility: hidden;
        }
    }

    &__control-action-tooltip {
        --g-popover-max-width: none;

        &_mobile {
            --g-popover-max-width: 50%;
        }
    }

    &__value-type-button {
        margin-left: 8px;
    }

    &__switcher {
        box-sizing: content-box;
        display: flex;
        align-items: center;
        height: 32px;
        padding: 0 2px 0 16px;
        border-bottom: 1px solid var(--g-color-line-generic);
    }

    &__switcher-title {
        @include text-accent;

        &:not(#{&}_years) {
            cursor: pointer;
        }

        &_disabled {
            pointer-events: none;
        }
    }

    &__switcher-controls {
        display: flex;
        justify-content: space-between;
        width: 58px;
        margin-left: auto;
    }

    &__switcher-button {
        width: 28px;
    }

    &__switcher-button-icon {
        &_back {
            transform: rotate(90deg);
        }

        &_forward {
            transform: rotate(-90deg);
        }
    }

    &__calendar-container {
        position: relative;
        display: flex;
        align-items: center;
        justify-content: center;
        height: 180px;
        overflow: hidden;
    }

    &__calendar-animated {
        &_animating {
            position: absolute;
            pointer-events: none;
        }

        &_forward,
        &_back {
            transform: translateX(-50%);
        }

        &_forward:first-child:not(:only-child) {
            animation: yc-datepicker-hidding-forward 0.25s ease;
        }

        &_back:first-child:not(:only-child) {
            animation: yc-datepicker-hidding-back 0.25s ease;
        }

        &_zoom-out:first-child:not(:only-child) {
            animation: yc-datepicker-hidding-zoom-in 0.25s ease;
        }

        &_zoom-in:first-child:not(:only-child) {
            animation: yc-datepicker-hidding-zoom-out 0.25s ease;
        }

        & + &_forward {
            animation: yc-datepicker-showing-forward 0.25s ease;
        }

        & + &_back {
            animation: yc-datepicker-showing-back 0.25s ease;
        }

        & + &_zoom-out {
            animation: yc-datepicker-showing-zoom-out 0.25s ease;
        }

        & + &_zoom-in {
            animation: yc-datepicker-showing-zoom-in 0.25s ease;
        }
    }

    &__calendar {
        display: grid;
        grid-template-columns: repeat(3, 48px);
        grid-auto-rows: 28px;
        grid-gap: 8px 20px;
        justify-content: center;
        user-select: none;
        transition: transform 0.2s ease;

        &_month {
            grid-template-columns: repeat(7, 28px);
            grid-auto-rows: 28px;
            grid-gap: 0;
        }
    }

    &__calendar-item {
        display: flex;
        align-items: center;
        justify-content: center;
        border-radius: 4px;
        cursor: pointer;

        &_weekend {
            color: var(--g-color-text-danger);
        }

        &_out-of-boundary {
            color: var(--g-color-text-hint);
        }

        &_current {
            color: var(--g-color-text-info);
        }

        &_selected {
            background-color: var(--g-color-base-selection);
        }

        &_disabled {
            pointer-events: none;
            opacity: 0.5;
        }

        &:hover:not(#{&}_selected) {
            background-color: var(--g-color-base-generic);
        }
    }

    &__popup {
        width: 220px;
        border-radius: 8px;
        overflow: hidden;
    }

    &__apply-btn {
        padding: 0 12px 12px;
    }
}

@keyframes yc-datepicker-showing-forward {
    from {
        left: -50%;
    }
    to {
        left: 50%;
    }
}

@keyframes yc-datepicker-showing-back {
    from {
        left: 150%;
    }
    to {
        left: 50%;
    }
}

@keyframes yc-datepicker-hidding-forward {
    from {
        left: 50%;
    }
    to {
        left: 150%;
    }
}

@keyframes yc-datepicker-hidding-back {
    from {
        left: 50%;
    }
    to {
        left: -50%;
    }
}

@keyframes yc-datepicker-showing-zoom-in {
    from {
        opacity: 0;
        transform: scale(0);
    }
    to {
        opacity: 1;
        transform: scale(1, 1);
    }
}

@keyframes yc-datepicker-showing-zoom-out {
    from {
        opacity: 0;
        transform: scale(2, 2);
    }
    to {
        opacity: 1;
        transform: scale(1, 1);
    }
}

@keyframes yc-datepicker-hidding-zoom-out {
    to {
        opacity: 0;
        transform: scale(2, 2);
    }
}

@keyframes yc-datepicker-hidding-zoom-in {
    to {
        opacity: 0;
        transform: scale(0);
    }
}
